# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

from transformers import pipeline
import networkx as nx
import matplotlib.pyplot as plt
import json
from collections import defaultdict

# Step 1: Define Hugging Face Model Pipeline
# Use NER (Named Entity Recognition) for concept extraction
ner = pipeline("ner", model="dslim/bert-base-NER", grouped_entities=True)

# Step 2: Extract concepts and relations from text
def extract_concepts_relations(text, domain="general"):
  # Extract named entities (concepts) using NER
  entities = ner(text)

  # Prepare list of relations (concepts extracted will be linked)
  relations = []
  for entity in entities:
    source = entity['word']
    target = domain
    relation = "is a"
    weight = 5
    category = entity['entity_group'] # Grouping by entity type (e.g., PERSON, LOCATION)

    relations.append({
        "source": source,
        "target": target,
        "relation": relation,
        "weight": weight,
        "category": category
      })
  return relations

# Step 3: Build and visualize the knowledge graph
def visualize_graph(data):
  G = nx.DiGraph()
  colors = []
  category_color = {}

  for item in data:
    source = item['source']
    target = item['target']
    label = item['relation']
    weight = item.get('weight', 5)
    category = item.get('category', 'Other')

    G.add_edge(source, target, label =label, weight=weight)

    for node in [source, target]:
      if node not in category_color:
        category_color[node] = category

  # Unique categories and colors
  unique_categories = list(set(category_color.values()))
  color_map = {cat: plt.cm.Set3(i / len(unique_categories)) for i, cat in enumerate(unique_categories)}

  for node in G.nodes():
    cat = category_color.get(node, 'Other')
    colors.append(color_map[cat])

  pos = nx.spring_layout(G, seed=42)
  weights =[G[u][v]['weight'] for u, v in G.edges()]
  labels = nx.get_edge_attributes(G, 'label2)')

  plt.figure(figsize=(12,8))
  nx.draw(G, pos, with_labels=True, edge_color='gray', width=weights, node_color = colors, node_size=1500, font_size=10)
  nx.draw_networkx_edge_labels(G, pos, edge_labels=labels)
  plt.title("MindMapGPT - Visual Knowledge Graph")
  plt.show()

# Example
if __name__=="__main__":
  input_text = """
    Artificial Intelligence (AI) is a broad field in computer science focused on creating intelligent machines that can simulate human cognition.
    One key subfield of AI is Machine Learning (ML), which enables systems to learn from data and improve over time.
    Within ML, there are two primary types of learning: supervised learning and unsupervised learning.

    Deep Learning, a subfield of ML, uses artificial neural networks to model high-level abstractions in data.
    Neural networks are especially effective in image and speech recognition tasks.
    AI also includes Natural Language Processing (NLP), a branch that deals with the interaction between computers and human languages.
    NLP is commonly applied in applications like chatbots, language translation, and sentiment analysis.

    AI systems can be categorized into narrow AI, which performs specific tasks, and general AI, which aims to replicate human-level cognition across a wide range of tasks.
    Another important concept is reinforcement learning, where agents learn by interacting with an environment to maximize cumulative rewards.
    """

  domain = "Artificial Intelligence"

  data = extract_concepts_relations(input_text, domain=domain)

  # Visualize the resulting knowledge graph
  visualize_graph(data)